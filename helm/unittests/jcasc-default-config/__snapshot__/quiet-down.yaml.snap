should apply the customised quiet down message if specified:
  1: |
    |-
      groovy:
        - script: |
            def quietDown = true
            def jenkins = jenkins.model.Jenkins.get()
            def quietDownMessage = "Custom quiet down message."
            if (quietDown) {
              if (!jenkins.isQuietingDown() ||
                  jenkins.getQuietDownReason() != quietDownMessage) {
                // puts Jenkins into quietdown/shutdown mode, without waiting for existing builds to complete (block=false)
                jenkins.doQuietDown(false, 0, quietDownMessage)
              }
            } else {
              if (jenkins.isQuietingDown()) {
                jenkins.doCancelQuietDown()
              }
            }
should include correct quietDown value:
  1: |
    |-
      groovy:
        - script: |
            def quietDown = true
            def jenkins = jenkins.model.Jenkins.get()
            def quietDownMessage = "This is currently the backup Jenkins instance, use the instance in the other cluster instead."
            if (quietDown) {
              if (!jenkins.isQuietingDown() ||
                  jenkins.getQuietDownReason() != quietDownMessage) {
                // puts Jenkins into quietdown/shutdown mode, without waiting for existing builds to complete (block=false)
                jenkins.doQuietDown(false, 0, quietDownMessage)
              }
            } else {
              if (jenkins.isQuietingDown()) {
                jenkins.doCancelQuietDown()
              }
            }
should include quiet down groovy script in default config scripts when enabled:
  1: |
    |-
      groovy:
        - script: |
            def quietDown = false
            def jenkins = jenkins.model.Jenkins.get()
            def quietDownMessage = "This is currently the backup Jenkins instance, use the instance in the other cluster instead."
            if (quietDown) {
              if (!jenkins.isQuietingDown() ||
                  jenkins.getQuietDownReason() != quietDownMessage) {
                // puts Jenkins into quietdown/shutdown mode, without waiting for existing builds to complete (block=false)
                jenkins.doQuietDown(false, 0, quietDownMessage)
              }
            } else {
              if (jenkins.isQuietingDown()) {
                jenkins.doCancelQuietDown()
              }
            }
