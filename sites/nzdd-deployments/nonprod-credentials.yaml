JCasC:
  vault:
    credentials:
      a5ee91f5-ad22-4d32-93eb-b68260452790:
        kind: vaultSSHUserPrivateKeyImpl
        description: "SSH Username with private key and passphrase"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/ssh"
        scope: GLOBAL
        usernameKey: "ssh_username"
        privatekeyKey: "ssh_key"
        passphraseKey: "ssh_passphrase"
      ArtifactoryStaging:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Artifactory Staging Credentials"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/ArtifactoryStaging"
        scope: GLOBAL
        usernameKey: "artifactory_user"
        passwordKey: "artifactory_password"
      decryptionKeyCredentialsId:
        kind: vaultStringCredentialImpl
        description: "decryption key used by automation tests"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/decryptionKeyCredentialsId"
        scope: GLOBAL
        vaultKey: "taf_decryption_key"
      unitTestsDecryptionKeyCredentialsId:
        kind: vaultStringCredentialImpl
        description: "Decryption key used in taf for running Unit and Acceptance tests"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/unitTestsDecryptionKeyCredentialsId"
        scope: GLOBAL
        vaultKey: "taf_unittest_decryption_key"
      JenkinsITGAccount:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Database Service Account"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/JenkinsITGAccount"
        scope: GLOBAL
        usernameKey: "td_itg_user"
        passwordKey: "td_itg_password"
      bitBucketUsernamePasswordCredentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "BitBucket service account"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/bitBucketUsernamePasswordCredentials"
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "password"
      SlackToken:
        kind: vaultStringCredentialImpl
        description: "Slack token"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/SlackToken"
        scope: GLOBAL
        vaultKey: "slack_token"
      ControlTableServiceAccount:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Database service account for performing control table operations"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/ControlTableServiceAccount"
        scope: GLOBAL
        usernameKey: "td_ctl_tbl_user"
        passwordKey: "td_ctl_tbl_password"
      Artifactory_Dev:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Artifactory Development Credential"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/Artifactory_Dev"
        scope: GLOBAL
        usernameKey: "artifactory_user"
        passwordKey: "artifactory_password"
      bitBucketSSH:
        kind: vaultSSHUserPrivateKeyImpl
        description: "SSH Key used to perform git operations (cloning) during the pipeline"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/bitBucketSSH"
        scope: GLOBAL
        usernameKey: "user"
        privatekeyKey: "key"
        passphraseKey: "passphrase"
      ControlMNZNonProd:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Control-M NZ Non-Prod account details"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/controlm"
        scope: GLOBAL
        usernameKey: "ctlm_np_username"
        passwordKey: "ctlm_np_password"
      TeradataCloud:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Cloud Database Service Account"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/teradata_cloud"
        scope: GLOBAL
        usernameKey: "td_user"
        passwordKey: "td_password"
      artifactory_creds:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Artifactory credentials for nzdw TAF"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/TafArtifactory"
        scope: GLOBAL
        usernameKey: "artifactory_user"
        passwordKey: "artifactory_password"
      artifactory_staging_creds:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Artifactory staging credentials for nzdw TAF"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/TafArtifactory"
        scope: GLOBAL
        usernameKey: "artifactory_staging_user"
        passwordKey: "artifactory_staging_password"
      Bitbucket_Service_Account:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Allow nzdw TAF to access bitbucket"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/TafBitBucket"
        scope: GLOBAL
        usernameKey: "userName"
        passwordKey: "password"
      BitbucketuserColon:
        kind: vaultStringCredentialImpl
        description: "Allow nzdw TAF to access bitbucket user pass as a single string"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/TafBitbucketuserColon"
        scope: GLOBAL
        vaultKey: text
      PipelineDecriptionKey:
        kind: vaultStringCredentialImpl
        description: "Allows nzdw TAF to connect to Teradata"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/decryptionKeyCredentialsId"
        scope: GLOBAL
        vaultKey: taf_decryption_key
      Splunk:
        kind: vaultStringCredentialImpl
        description: "Splunk Token"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/splunk"
        scope: GLOBAL
        vaultKey: "apiToken"
      id_rsa_dev:
        kind: vaultSSHUserPrivateKeyImpl
        description: "RSA Private Key for DEV IIH box"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/id_rsa_dev"
        scope: GLOBAL
        usernameKey: "user"
        privatekeyKey: "key"
        passphraseKey: "passphrase"
      id_rsa_sit:
        kind: vaultSSHUserPrivateKeyImpl
        description: "RSA Private Key for SIT IIH box"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/id_rsa_sit"
        scope: GLOBAL
        usernameKey: "user"
        privatekeyKey: "key"
        passphraseKey: "passphrase"