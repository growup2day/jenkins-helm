JCasC:
  configScripts:
    jobs: |
      jobs:
        - script: |
            {{- .Files.Get "groovy-lib/pipeline-helper.groovy" | nindent 6 }}
            {{- tpl $.Values.uploadBackupToArtifactory $ | nindent 6 }}
            {{- tpl $.Values.downloadBackupFromArtifactory $ | nindent 6 }}
            {{- tpl $.Values.generateCTLMReport $ | nindent 6 }}

uploadBackupToArtifactory: |
  bitbucketPipelineJob(
    jobName: "Artifactory - Upload Backup",
    gitUrl: "https://bitbucket.nz.service.anz/scm/nzdd-ops/jenkins-publish-backup.git",
    credentialsId: "bitBucketUsernamePasswordCredentials",
    branch: "master",
    scriptPath: "upload.Jenkinsfile",
    triggerBuildOnPush: false,
    disableConcurBuilds: true,
    pollSCMSpec: false,
    buildRetentionNumStr: "100",
    parametersNeeded: false,
    cronSpec: "15 5 * * 1-5",
  )

downloadBackupFromArtifactory: |
  bitbucketPipelineJob(
    jobName: "Artifactory - Download Backup",
    gitUrl: "https://bitbucket.nz.service.anz/scm/nzdd-ops/jenkins-publish-backup.git",
    credentialsId: "bitBucketUsernamePasswordCredentials",
    branch: "master",
    scriptPath: "download.Jenkinsfile",
    triggerBuildOnPush: false,
    disableConcurBuilds: true,
    pollSCMSpec: false,
    buildRetentionNumStr: "100",
    parametersNeeded: true,
  )

generateCTLMReport: |
  bitbucketPipelineJob(
    jobName: "Generate Control-M Report",
    gitUrl: "https://bitbucket.nz.service.anz/scm/dn/nzdw_build_utility.git",
    credentialsId: "bitBucketUsernamePasswordCredentials",
    branch: "master",
    scriptPath: "Jenkinsfile_generate_ctlm_report",
    triggerBuildOnPush: false,
    disableConcurBuilds: true,
    pollSCMSpec: false,
    buildRetentionNumStr: "10",
    parametersNeeded: false,
    cronSpec: "15 12 * * 1-5",
  )