JCasC:
  vault:
    credentials:
      ArtifactoryStaging:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Artifactory Staging Credentials"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/ArtifactoryStaging"
        scope: GLOBAL
        usernameKey: "artifactory_user"
        passwordKey: "artifactory_password"
      Artifactory_Dev:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Dev Artifactory credentials"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/"
        scope: GLOBAL
        usernameKey: "artifactory_user"
        passwordKey: "artifactory_password"
      Artifactory_Prod:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Artifactory Production Credential for service account"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/Artifactory_Prod"
        scope: GLOBAL
        usernameKey: "artifactory_user"
        passwordKey: "artifactory_password"
      ControlTableServiceAccount:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Database service account for performing control table operations"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/ControlTableServiceAccount"
        scope: GLOBAL
        usernameKey: "td_user"
        passwordKey: "td_password"
      JenkinsProdAccount:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Database Service Account for PROD"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/JenkinsProdAccount"
        scope: GLOBAL
        usernameKey: "td_user"
        passwordKey: "td_password"
      JenkinsTestEnvAccount:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Database Service Account for nonprod regions"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/JenkinsTestEnvAccount"
        scope: GLOBAL
        usernameKey: "td_user"
        passwordKey: "td_password"
      ProductionVerifyAccountId:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Account used to verify deployment"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/ProductionVerifyAccountId"
        scope: GLOBAL
        usernameKey: "td_user"
        passwordKey: "td_password"
      JenkinsITGAccount:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Database Service Account for ITG"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/JenkinsITGAccount"
        scope: GLOBAL
        usernameKey: "td_itg_user"
        passwordKey: "td_itg_password"
      bitBucketUsernamePasswordCredentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "BitBucket Username Password Credentials"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/bitBucketUsernamePasswordCredentials"
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "password"
      bitBucketSSH:
        kind: vaultSSHUserPrivateKeyImpl
        description: "SSH Key used to perform git operations (cloning) during the pipeline"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/bitBucketSSH"
        scope: GLOBAL
        usernameKey: "user"
        privatekeyKey: "key"
        passphraseKey: "passphrase"
      decryptionKeyCredentialsId:
        kind: vaultStringCredentialImpl
        description: "decryption key for automation test service account"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/decryptionKeyCredentialsId"
        scope: GLOBAL
        vaultKey: "taf_decryption_key"
      drivetrain-shared-private-key:
        kind: vaultStringCredentialImpl
        description: "Shared private key for signing JWTs to authorise requests to Drivetrain"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/drivetrain-shared-private-key"
        scope: GLOBAL
        vaultKey: "drivetrain_key"
      eab935ff-392e-471d-ba28-9bf69ceb71f5:
        kind: vaultSSHUserPrivateKeyImpl
        description: "ssh key for PROD"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/eab935ff-392e-471d-ba28-9bf69ceb71f5"
        scope: GLOBAL
        usernameKey: "ssh_user"
        privatekeyKey: "ssh_key"
        passphraseKey: "ssh_passphrase"
      f9c4dbd2-ee69-42a3-83b2-505bcab3b9ac:
        kind: vaultSSHUserPrivateKeyImpl
        description: "ssh key for SIT and OAT"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/f9c4dbd2-ee69-42a3-83b2-505bcab3b9ac"
        scope: GLOBAL
        usernameKey: "ssh_user"
        privatekeyKey: "ssh_key"
        passphraseKey: "ssh_passphrase"
      a5ee91f5-ad22-4d32-93eb-b68260452790:
        kind: vaultSSHUserPrivateKeyImpl
        description: "DEV Pipeline SSH Username with private key and passphrase"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/a5ee91f5-ad22-4d32-93eb-b68260452790"
        scope: GLOBAL
        usernameKey: "ssh_username"
        privatekeyKey: "ssh_key"
        passphraseKey: "ssh_passphrase"
      unitTestsDecryptionKeyCredentialsId:
        kind: vaultStringCredentialImpl
        description: "taf Unit Test decryption key"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/unitTestsDecryptionKeyCredentialsId"
        scope: GLOBAL
        vaultKey: "taf_unittest_decryption_key"
      nzdw_repo_name:
        kind: vaultStringCredentialImpl
        description: "nzdw_repo repository Name"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/repo_name"
        scope: GLOBAL
        vaultKey: "repo_name"
      SlackTokenOPs:
        kind: vaultStringCredentialImpl
        description: "Used for data-ops-team slack channel"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/SlackTokenOPs"
        scope: GLOBAL
        vaultKey: "slack_operations_token"
      Splunk:
        kind: vaultStringCredentialImpl
        description: "The Splunk API token for forwarding events into Splunk."
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/Splunk"
        scope: GLOBAL
        vaultKey: "token"
      SplunkToken:
        kind: vaultUsernamePasswordCredentialImpl
        description: "The Splunk API token for forwarding events into Splunk."
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/Splunk"
        scope: GLOBAL
        usernameKey: "host"
        passwordKey: "token"
      bitBucketWebhookToken:
        kind: vaultStringCredentialImpl
        description: "The Webhook Token used by the Pipeline_Trigger job to receive webhook triggers from BitBucket"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/bitBucketWebhookToken"
        scope: GLOBAL
        vaultKey: "token"
      autoTagWebhookToken:
        kind: vaultStringCredentialImpl
        description: "The Webhook Token used by the Add_Release_Tag_V3 job to receive webhook triggers from BitBucket"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/autoTagWebhookToken"
        scope: GLOBAL
        vaultKey: "token"
      pr_merge:
        kind: vaultStringCredentialImpl
        description: "The Webhook Token used by the Automated_branch_deletion job to receive webhook triggers from BitBucket"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/pr_merge"
        scope: GLOBAL
        vaultKey: "token"
      id_rsa_nonprod:
        kind: vaultSSHUserPrivateKeyImpl
        description: "RSA Private Key for OAT IIH box"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/id_rsa_nonprod"
        scope: GLOBAL
        usernameKey: "user"
        privatekeyKey: "key"
        passphraseKey: "passphrase"
      id_rsa_prod:
        kind: vaultSSHUserPrivateKeyImpl
        description: "RSA Private Key for Prod IIH box"
        path: "{{ tpl .Values.nzdd.vault.secretPathRoot $ }}/id_rsa_prod"
        scope: GLOBAL
        usernameKey: "user"
        privatekeyKey: "key"
        passphraseKey: "passphrase"