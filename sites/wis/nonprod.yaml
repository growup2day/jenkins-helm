persistentVolume:
  storage: 50Gi

buildBranchRegex: "feature.*|bugfix.*|hotfix.*"

JCasC:
  vault:
    vaultUrl: "https://vault-preprod.nzlb.service.test:8200"
    credentials:
      jira-access-token:
        kind: vaultStringCredentialImpl
        description: "Access token for JIRA"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/jira'
        scope: GLOBAL

  configScripts:
    multi-branch-jobs: |
      jobs:
        - script: |
            {{- .Files.Get "groovy-lib/organization-folder-helper.groovy" | nindent 6 }}
            {{- .Files.Get "groovy-lib/multibranch-pipeline-helper.groovy" | nindent 6 }}

            def buildRepoRegex = '^(wis$).*'
            def buildBranchRegex = 'feature.*|bugfix.*|hotfix.*'
            {{- tpl $.Values.WISFeatureBranchJobsSnippet $ | nindent 6 }}

            buildRepoRegex = '^(wis$).*'
            buildBranchRegex = '^wis-.*'
            {{- tpl $.Values.WISReleaseBranchJobsSnippet $ | nindent 6 }}

            buildRepoRegex = '^(wis$).*'
            buildBranchRegex = 'master'
            {{- tpl $.Values.WISMasterBranchJobSnippet $ | nindent 6 }}

    pipeline-jobs: |
      jobs:
        - script: |
            {{- .Files.Get "groovy-lib/pipeline-helper.groovy" | nindent 6 }}
      
            {{- tpl $.Values.WISSpecificationTestSnippet $ | nindent 6 }}
            {{- tpl $.Values.WISDBUpgradeSnippet $ | nindent 6 }}
            {{- tpl $.Values.WISDeploySnippet $ | nindent 6 }}

    lockable-resources: |
      unclassified:
        lockableResourcesManager:
          declaredResources:
            - name: "dev01:MW01"
              labels: "testDB"
            - name: "dev03:MW03"
              labels: "testDB"
            - name: "dev16:mw_DEV16"
              labels: "testDB"
            - name: "dev17:mw_DEV17"
              labels: "testDB"

    global-maven-settings: |
      unclassified:
        globalConfigFiles:
          configs:
            - globalMavenSettings:
                comment: "global settings"
                content: "<settings>\n\t\t<servers>\n\t<server>\n\t\t<id>maven-digital-snapshots-local</id>\n\
                \t\t<username>^${artifactoryUsername}</username>\n\t\t<password>^${artifactoryPassword}</password>\n\
                \t</server>\n\t<server>\n\t\t<id>maven-digital-releases-local</id>\n\t\t\
                <username>^${artifactoryUsername}</username>\n\t\t<password>^${artifactoryPassword}</password>\n\
                \t</server>\n</servers>\n\t<mirrors>\n\t\t<mirror>\n\t\t\t<id>maven-digital-virtual</id>\n\
                \t\t\t<name>ANZ NZ Digital Maven Repository</name>\n\t\t\t<url>https://artifactory-staging.nz.service.anz:443/artifactory/maven-digital-virtual</url>\n\
                \t\t\t<mirrorOf>*</mirrorOf>\n\t\t</mirror>\n\t</mirrors>\n</settings>"
                id: "f97e00b5-94d7-4ef5-be4e-ae0c517cc612"
                isReplaceAll: true
                name: "WISGlobalSettings"
                providerId: "org.jenkinsci.plugins.configfiles.maven.GlobalMavenSettingsConfig"
                serverCredentialMappings:
                  - credentialsId: "artifactoryStagingUsernameApiKeyCredentials"
                    serverId: "maven-digital-snapshots-local"
                  - credentialsId: "releaseArtifactoryUsernameApiKeyCredentials"
                    serverId: "maven-digital-releases-local"

    k8s-clouds: |
      jenkins:
        agentProtocols:
          - "JNLP4-connect"
          - "Ping"
