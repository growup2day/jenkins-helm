JCasC:
  defaultConfig: true
  adminAddress: "NZ BWB Jenkins <NZBWBPipelineDSA@anz.com>"

  master:
    mode: NORMAL
    numExecutors: 5
    proxy:
      name: "10.38.141.33"
      port: 80
      noProxyHost: |-
        *.service.dev
        *.test
        *.anz
        *.anznb.co.nz

  quietDown:
    enableScript: true

  anzBitbucket:
    enabled: true
    manageHooks: false
    credentialsId: bitBucketUsernamePasswordCredentials

  pipelineLibraries:
    cspPipeline:
      repo: https://bitbucket.nz.service.anz/scm/dig/csp-pipeline.git
      credentialsId: bitBucketUsernamePasswordCredentials
      includeInChangesets: true
    openshiftPipeline:
      repo: https://bitbucket.nz.service.anz/scm/pipe/openshift-pipeline.git
      credentialsId: bitBucketUsernamePasswordCredentials
      includeInChangesets: true

  envVars:
    csp_pipeline__disable_email_notifications: false
    csp_pipeline__disable_slack_notifications: false
    csp_pipeline__non_admin_user: ""
    dependency_track_api_key: ""
    dependency_track_server_url: http://dependency-track-4-dependency-track-non-prod.caas.nz.service.test
    dynatrace_non_prod_server_url: https://nzqdy02v.nz.unix.test:9999/e/ckk60131/
    dynatrace_prod_server_url: https://nzp2dy4v.nz.unix.anz:9999/e/ece80171/

  vault: #Add all values from NZ Vault  https://vault.nzlb.service.anz:8200/ui/vault/secrets/secret/list/context/bwb-tools/bwb-jenkins/?namespace=nonprod
    credentials:
      bitBucketUsernamePasswordCredentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "BWB service account for BitBucket access"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/bitbucket'
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "password"
      artifactoryUsernameApiKeyCredentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Username and API Key for Production Artifactory"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/artifactory'
        scope: GLOBAL
        usernameKey: "artifactory_username"
        passwordKey: "artifactory_api_key"
      artifactoryStagingUsernameApiKeyCredentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Username and API Key for Staging Artifactory"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
                }}/credentials/artifactory'
        scope: GLOBAL
        usernameKey: "artifactory_staging_username"
        passwordKey: "artifactory_staging_api_key"
      proxyUsernamePasswordCredentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "BWB service account for proxy access"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
                                                                     }}/credentials/proxy'
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "password"
      slack:
        kind: vaultStringCredentialImpl
        description: "Token for Slack Integration"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/slack'
        scope: GLOBAL
        vaultKey: "token"
      dynatrace-non-prod-api-key:
        kind: vaultStringCredentialImpl
        description: "API key for Dynatrace Non-prod"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/dynatrace'
        scope: GLOBAL
        vaultKey: "non_prod_token"
      dependencyTrackApiKeyCredentials:
        kind: vaultStringCredentialImpl
        description: "API Key to access dependency track"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/dependency-track'
        scope: GLOBAL
        vaultKey: "api_key"

      # Drivetrain credentials
      drivetrain-shared-private-key:
        kind: vaultStringCredentialImpl
        description: "Private key for Drivetrain"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/drivetrain'
        scope: GLOBAL
        vaultKey: "private_key"
      drivetrain-e2e-shared-private-key:
        kind: vaultStringCredentialImpl
        description: "API Key to access Drivetrain E2E instance"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/drivetrain-e2e'
        scope: GLOBAL
        vaultKey: "private_key"

      # Security scan credentials - Fortify, Checkmarx
      fortify-credentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "BWB service account for Fortify access"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
                                              }}/credentials/fortify'
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "password"
      checkmarx-token:
        kind: vaultStringCredentialImpl
        description: "Token for CheckMarx Integration"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/checkmarx'
        scope: GLOBAL
        vaultKey: "token"

      # Openshift credentials
      ocp3-dev-openshift:
        kind: vaultStringCredentialImpl
        description: "OpenShift service account token for OCP3 dev cluster"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/openshift-service-account'
        scope: GLOBAL
        vaultKey: "ocp3-dev-openshift"
      cs1-dev-openshift:
        kind: vaultStringCredentialImpl
        description: "OpenShift service account token for CS1-DEV cluster"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/openshift-service-account'
        scope: GLOBAL
        vaultKey: "cs1-dev-openshift"
      cs2-dev-openshift:
        kind: vaultStringCredentialImpl
        description: "OpenShift service account token for CS2-DEV cluster"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/openshift-service-account'
        scope: GLOBAL
        vaultKey: "cs2-dev-openshift"

      # BDP Java services Oracle credentials
      oracle-automation-dev:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Oracle dev instance"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
                                                      }}/credentials/oracle-provisioning'
        scope: GLOBAL
        usernameKey: "dev_username"
        passwordKey: "dev_password"
      oracle-automation-test:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Oracle test instance"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
                                                          }}/credentials/oracle-provisioning'
        scope: GLOBAL
        usernameKey: "test_username"
        passwordKey: "test_password"
      oracle-automation-sit:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Oracle SIT instance"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
                                                                }}/credentials/oracle-provisioning'
        scope: GLOBAL
        usernameKey: "sit_username"
        passwordKey: "sit_password"
      oracle-automation-oat:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Oracle OAT instance"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/oracle-provisioning'
        scope: GLOBAL
        usernameKey: "oat_username"
        passwordKey: "oat_password"

      # BWB Core MSSQL credentials
      database-automation-bwb-dev:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for BWB DEV Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/bwb'
        scope: GLOBAL
        usernameKey: "dev_username"
        passwordKey: "dev_password"
      database-automation-bwb-sit:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for BWB SIT Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/bwb'
        scope: GLOBAL
        usernameKey: "sit_username"
        passwordKey: "sit_password"
      database-automation-bwb-oat:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for BWB OAT Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/bwb'
        scope: GLOBAL
        usernameKey: "oat_username"
        passwordKey: "oat_password"

      # BDP Deals Service MSSQL credentials
      database-automation-deals-service-dev:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Pricing Deals Service DEV Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/deals-service'
        scope: GLOBAL
        usernameKey: "dev_username"
        passwordKey: "dev_password"
      database-automation-deals-service-sit:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Pricing Deals Service SIT Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/deals-service'
        scope: GLOBAL
        usernameKey: "sit_username"
        passwordKey: "sit_password"
      database-automation-deals-service-oat:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Pricing Deals Service OAT Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/deals-service'
        scope: GLOBAL
        usernameKey: "oat_username"
        passwordKey: "oat_password"

      # BDP Interest Rates Service MSSQL credentials
      database-automation-interest-rates-service-dev:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Pricing Interest Rates Service DEV Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/interest-rates-service'
        scope: GLOBAL
        usernameKey: "dev_username"
        passwordKey: "dev_password"
      database-automation-interest-rates-service-sit:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Pricing Interest Rates Service SIT Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/interest-rates-service'
        scope: GLOBAL
        usernameKey: "sit_username"
        passwordKey: "sit_password"
      database-automation-interest-rates-service-oat:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Pricing Interest Rates Service OAT Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/interest-rates-service'
        scope: GLOBAL
        usernameKey: "oat_username"
        passwordKey: "oat_password"

      # BDP Interest Rates Draft Service MSSQL credentials
      database-automation-rates-draft-service-dev:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Pricing Interest Rates Draft Service DEV Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/rates-draft-service'
        scope: GLOBAL
        usernameKey: "dev_username"
        passwordKey: "dev_password"
      database-automation-rates-draft-service-sit:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Pricing Interest Rates Draft Service SIT Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/rates-draft-service'
        scope: GLOBAL
        usernameKey: "sit_username"
        passwordKey: "sit_password"
      database-automation-rates-draft-service-oat:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Pricing Interest Rates Draft Service OAT Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/rates-draft-service'
        scope: GLOBAL
        usernameKey: "oat_username"
        passwordKey: "oat_password"

      # BWB Loans Service MSSQL credentials
      database-automation-loans-acceptance:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Loans Service Acceptance Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/loans'
        scope: GLOBAL
        usernameKey: 'acceptance_username'
        passwordKey: 'acceptance_password'
      database-automation-loans-union:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Loans Service Union Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/loans'
        scope: GLOBAL
        usernameKey: 'union_username'
        passwordKey: 'union_password'
      database-automation-loans-rehearsal:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for Loans Service Rehearsal Automation Database"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/credentials/database-automation/loans'
        scope: GLOBAL
        usernameKey: 'rehearsal_username'
        passwordKey: 'rehearsal_password'

  openshiftClouds:
    # explicit cloud definition for the non-prod cluster
    openshift_non_prod:
      serverUrl: "https://caas-master.nz.service.test:8443"
      namespace: "bwb-ci"
      credentialsId: "ocp3-dev-openshift"
      skipTlsVerify: false
      webSocket: true
    # explicit cloud definition for the 2 non-prod clusters
    openshift_cs1_dev:
      serverUrl: "https://api.cs1-dev.nz.service.test:6443"
      namespace: "bwb-tools"
      credentialsId: "cs1-dev-openshift"
      skipTlsVerify: false
      webSocket: true

    openshift_cs2_dev:
      serverUrl: "https://api.cs2-dev.nz.service.test:6443"
      namespace: "bwb-tools"
      credentialsId: "cs2-dev-openshift"
      skipTlsVerify: false
      webSocket: true

OMLibsJobsSnippet: |
  bitbucketOrganizationFolder(
    folderName: "BWB",
    displayName: "Omni-Assisted Library and Infra " + displayNameSuffix,
    project: "BWB",
    repoRegex: "^((?!.*DEPRECATED.*).)*",
    credentialsId: "bitBucketUsernamePasswordCredentials",
    branchRegex: buildBranchRegex,
  )

OMJobsSnippet: |
  bitbucketOrganizationFolder(
    folderName: "OM",
    displayName: "Omni-Assisted Microservice " + displayNameSuffix,
    project: "OM",
    repoRegex: ".*",
    credentialsId: "bitBucketUsernamePasswordCredentials",
    branchRegex: buildBranchRegex,
  )
