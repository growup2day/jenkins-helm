podAnnotations:
  # For Dynatrace
  environment: D

routeAnnotations:
  # Use the following annotation if you get 30s timeout issue from Jenkins
  # (which happens from time to time for the Job DSL API viewer)
  haproxy.router.openshift.io/timeout: 2m

customiseRoleMapping:
  # Disabled as the customise role mapping relies on creating a config map with fixed-name
  # which prevents more than one releases in the same ib-ci-dev namespace
  enabled: false

JCasC:
  anzBitbucket:
    # Personal Jenkins instance should not manage BitBucket hooks
    manageHooks: false

  envVars:
    ARTIFACTORY_REPOSITORY_BASE_URL: https://artifactory-staging.nz.service.anz/artifactory

  vault:
    vaultUrl: "https://vault-preprod.nzlb.service.test:8200"
    credentials:
      dev-artifactory-api-key:
        kind: vaultUsernamePasswordCredentialImpl
        description: "API Key for Artifactory-dev"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" .
          }}/pairs/dev-artifactory-api-key'
        scope: GLOBAL

  openshiftClouds:
    # override the resource limits
    dev:
      simpleTemplates:
        commonPodAttributes:
          instanceCap: 2
        commonContainerAttributes:
          resourceLimitCpu: "2"
          resourceLimitMemory: "4Gi"
        commonEnvVars:
          CONCURRENT_BUILD_TASKS: "1"
        templates:
          master-jenkins-slave:
            # slave to run for the `node('master')` part of the pipeline - instead of running in the Jenkins master node
            label: "master python oc jq skopeo"
            image:
              registry: "docker-ose-platform-local.artifactory-staging.nz.service.anz"
              path: "jenkins-ocp-anz/ose-jenkins-agent-maven:20230623"
            useGoInit: true
            podAttributes:
              idleMinutes: 60
              instanceCap: 5
              nodeUsageMode: EXCLUSIVE

  permanentNodes:
    enabled: false
    commonAttributes:
      nodeProperties:
        - toolLocation:
            locations:
              - home: "/usr/lib/jvm/java-1.8.0"
                key: "hudson.model.JDK$DescriptorImpl@JDK 1.8"
        - envVars:
            env:
              # reference repo path on Jenkins VM slave (nonprod)
              - key: "IB_REF_REPO_PATH"
                value: "/app/data/gitref/internetbanking"
      remoteFS: "/app/data/jenkins-slave"

  configScripts:
    setup-jobs: |
      jobs:
        - script: |
            {{- .Files.Get "groovy-lib/multibranch-pipeline-helper.groovy" | nindent 6 }}
            def buildBranchRegex = '{{ .Values.buildBranchRegex }}'
            // only seed jobs if buildBranchRegex is specified
            if (buildBranchRegex) {
              {{- tpl $.Values.ibJobsSnippet $ | nindent 8 }}
              {{- tpl $.Values.preauthOcpv4JobsSnippet $ | nindent 8 }}
              {{- tpl $.Values.ibatOpenshiftJobsSnippet $ | nindent 8 }}
              {{- tpl $.Values.ibBatchJobsSnippet $ | nindent 8 }}
              {{- tpl $.Values.ibAcceptanceTestJobSnippet $ | nindent 8 }}
              {{- tpl $.Values.ibMockServicesJobSnippet $ | nindent 8 }}
            }


buildBranchRegex: ""
