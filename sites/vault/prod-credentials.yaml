JCasC:
  vault:
    credentials:
      # OpenShift credentials
      prod-openshift-credentials:
        kind: vaultStringCredentialImpl
        description: "OpenShift service account token for OCP3 prod cluster"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/prod-openshift-credentials'
        scope: GLOBAL
        vaultKey: "prod-openshift-credentials"
      cs1-prod-openshift:
        kind: vaultStringCredentialImpl
        description: "The 'vault-jenkins' service account JWT from OCP4 cs1-prod for Kubernetes plugin"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/openshift-service-account'
        scope: GLOBAL
        vaultKey: "cs1-prod-openshift"
      cs2-prod-openshift:
        kind: vaultStringCredentialImpl
        description: "The 'vault-jenkins' service account JWT from OCP4 cs2-prod for Kubernetes plugin"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/openshift-service-account'
        scope: GLOBAL
        vaultKey: "cs2-prod-openshift"

      # credentials for OpenShift image registry
      dev-openshift-credentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "OpenShift service account username and token for OCP3 non-prod cluster, used by openshift-pipeline to copy image from non-prod OpenShift image registry to prod"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/openshift-service-account'
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "dev-openshift-credentials"

      drivetrain-shared-private-key:
        kind: vaultStringCredentialImpl
        description: "shared private key for authenticating to the drivetrain api"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/drivetrain-shared-private-key'
        scope: GLOBAL
        vaultKey: "token"

      nzvault-artifactory-api-key:
        kind: vaultUsernamePasswordCredentialImpl
        description: "username and api key for global\nzvaultdga against artifactory prod"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/nzvault-artifactory-api-key'
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "password"