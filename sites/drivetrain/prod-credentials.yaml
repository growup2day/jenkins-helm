JCasC:
  vault:
    credentials:
      # OpenShift credentials

      cs1-prod-openshift:
        kind: vaultStringCredentialImpl
        description: "The 'jenkins' service account JWT from OCP4 cs1-prod for Kubernetes plugin"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/openshift-service-account'
        scope: GLOBAL
        vaultKey: "cs1-prod-openshift"
      cs2-prod-openshift:
        kind: vaultStringCredentialImpl
        description: "The 'jenkins' service account JWT from OCP4 cs2-prod for Kubernetes plugin"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/openshift-service-account'
        scope: GLOBAL
        vaultKey: "cs2-prod-openshift"

      servicenow-credentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for servicenow account for drivetrain-techconnect"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/servicenow-credentials'
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "password"

      dev-servicenow-credentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Credentials for servicenow account for drivetrain-techconnect"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/dev-servicenow-credentials'
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "password"

      dynatrace-prod-api-key:
        kind: vaultStringCredentialImpl
        description: "API key for Dynatrace prod"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/dynatrace'
        scope: GLOBAL
        vaultKey: "prod-token"

      proxyUsernamePasswordCredentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Service account to access the corporate proxy"
        path:
          'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/proxy'
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "password"

      slack-bot-oauth-token:
        kind: vaultStringCredentialImpl
        description: "Bot User OAuth Access Token for Slacksmac"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/slack-bot-oauth-token'
        scope: GLOBAL
        vaultKey: "token"

      slack-app-oauth-token:
        kind: vaultStringCredentialImpl
        description: "oauth token for talking to slack"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/slack-app-oauth-token'
        scope: GLOBAL
        vaultKey: "token"

      bitbucket-token-branchtrack:
        kind: vaultStringCredentialImpl
        description: "bitbucket-token-branchtrack - A read only personal access token for the nzdtbitbucketdsa service account"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/bitbucket-token-branchtrack'
        scope: GLOBAL
        vaultKey: "token"

      bitbucket-token-drivetrain:
        kind: vaultStringCredentialImpl
        description: "bitbucket-token-drivetrain - A read only personal access token for the nzdtbitbucketdsa service account"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/bitbucket-token-drivetrain'
        scope: GLOBAL
        vaultKey: "token"

      artifactory-prod-credentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "Service account for artifactory prod access"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/artifactory'
        scope: GLOBAL
        usernameKey: "artifactory_username_prod"
        passwordKey: "artifactory_api_key_prod"

      # credentials for OpenShift image registry
      prod-openshift-credentials:
        kind: vaultUsernamePasswordCredentialImpl
        description: "OpenShift service account username and token for OCP3 prod cluster, used by openshift-pipeline to copy image from non-prod OpenShift image registry to prod"
        path: 'secret/context/{{ .Release.Namespace }}/{{ include "jenkins.serviceAccountName" . }}/credentials/openshift-service-account'
        scope: GLOBAL
        usernameKey: "username"
        passwordKey: "prod-openshift-credentials"